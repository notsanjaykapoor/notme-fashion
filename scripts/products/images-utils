#!/usr/bin/env python

import io
import os
import sys

sys.path.insert(1, os.path.join(sys.path[0], "../.."))

import dot_init

import click
import numpy
import PIL.Image
import rembg
import requests

@click.group()
def cli():
    pass


@click.command()
@click.option("--image-file", default=None, required=True, help="image file name")
@click.option("--output-file", default=None, required=True, help="output file name")
def bgrem_file(image_file: str, output_file: str):
    """
    Remove background from image hosted in local fs.
    """
    input_image = PIL.Image.open(image_file)
    input_array = numpy.array(input_image)
    output_array = rembg.remove(input_array, bgcolor=(255, 255, 255, 255))
    output_image = PIL.Image.fromarray(output_array)
    output_image.save(output_file)


@click.command()
@click.option("--image-url", default=None, required=True, help="image file name")
@click.option("--output-file", default=None, required=True, help="output file name")
def bgrem_url(image_url: str, output_file: str):
    """
    Remove background from image hosted at specified url.
    """
    r = requests.get(image_url, stream=True)
    if r.status_code != 200:
        raise Exception(f"get request error code {r.status_code}")

    input_image = PIL.Image.open(io.BytesIO(r.content))
    input_array = numpy.array(input_image)
    output_array = rembg.remove(input_array, bgcolor=(255, 255, 255, 255))
    output_image = PIL.Image.fromarray(output_array)
    output_image.save(output_file)


cli.add_command(bgrem_file)
cli.add_command(bgrem_url)

if __name__ == "__main__":
    cli()